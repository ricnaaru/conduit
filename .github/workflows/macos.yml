name: Macos

on:
  pull_request:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: "macos-test"
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: macos-latest
    strategy:
      matrix:
        sdk: [stable, main]
    steps:
    - uses: actions/checkout@v4
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ matrix.sdk }}
    - name: Setup Conduit
      run: |
        dart pub global activate melos
        dart pub global activate -spath packages/cli
        melos cache-source
    - name: Run tests
      working-directory: ../
      run: |
        conduit create -t db_and_auth --offline wildfire
        cd wildfire/
        echo "----------- Building test project -----------"
        conduit build
        conduit db generate
  unit:
    needs: smoke
    if: |
      startsWith(github.head_ref, 'feature/')
      || startsWith(github.head_ref, 'fix/')
      || startsWith(github.head_ref, 'refactor/')
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        runner_args: [melos test-unit --no-select, dart tool/generated_test_runner.dart]
        sdk: [stable, main]
    env:
      TEST_DIR: packages/core
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 15432
      POSTGRES_USER: conduit_test_user
      POSTGRES_PASSWORD: conduit!
      POSTGRES_DB: conduit_test_db
      TEST_DB_ENV_VAR: postgres://user:password@host:5432/dbname
      TEST_VALUE: 1
      TEST_BOOL: true
    steps:
    - name: Setup PostgreSQL for Linux/macOS/Windows
      uses: ikalnytskyi/action-setup-postgres@v6
      with:
        username: conduit_test_user
        password: conduit!
        database: conduit_test_db
        port: 15432
    - uses: actions/checkout@v4
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ matrix.sdk }}
    - name: Get Dependencies
      run: |
        dart pub global activate -spath packages/cli
        dart pub global activate melos
        melos bootstrap
        melos cache-source --no-select
        dart pub get --directory=packages/isolate_exec_test_packages/test_package --offline
        dart pub get --directory=packages/runtime_test_packages/application --offline
        dart pub get --directory=packages/runtime_test_packages/dependency --offline
    - name: Run tests
      working-directory: ${{ env.TEST_DIR }}
      run: ${{ matrix.runner_args }}